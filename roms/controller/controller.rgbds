INCLUDE "hardware.inc"

DEF TILEMAP_BASE EQU $9800
DEF A_PRESSED_TILE     = TILEMAP_BASE + 2*32 + 3
DEF B_PRESSED_TILE     = TILEMAP_BASE + 4*32 + 3
DEF SE_PRESSED_TILE    = TILEMAP_BASE + 6*32 + 3
DEF ST_PRESSED_TILE    = TILEMAP_BASE + 8*32 + 3
DEF RIGHT_PRESSED_TILE = TILEMAP_BASE + 2*32 + 7
DEF LEFT_PRESSED_TILE  = TILEMAP_BASE + 4*32 + 7
DEF UP_PRESSED_TILE    = TILEMAP_BASE + 6*32 + 7
DEF DOWN_PRESSED_TILE  = TILEMAP_BASE + 8*32 + 7
DEF NOT_PRESSED_TILE_NUM EQU 0
DEF PRESSED_TILE_NUM EQU 1

SECTION "VBlank", ROM0[$0040]
    jp VBlankInterrupt

SECTION "Header", ROM0[$100]
	jp EntryPoint

	ds $150 - @, 0 ; Make room for the header

EntryPoint:
	; Shut down audio circuitry
	ld a, 0
	ld [rNR52], a

	; Do not turn the LCD off outside of VBlank
WaitVBlank:
	ld a, [rLY]
	cp 144
	jp c, WaitVBlank

	; Turn the LCD off
	ld a, 0
	ld [rLCDC], a
    

	; Copy the tile data
	ld de, Tiles
	ld hl, $9000
	ld bc, TilesEnd - Tiles
CopyTiles:
	ld a, [de]
	ld [hli], a
	inc de
	dec bc
	ld a, b
	or a, c
	jp nz, CopyTiles

	; Copy the tilemap
	ld de, Tilemap
	ld hl, $9800
	ld bc, TilemapEnd - Tilemap
CopyTilemap:
	ld a, [de]
	ld [hli], a
	inc de
	dec bc
	ld a, b
	or a, c
	jp nz, CopyTilemap

	; Turn the LCD on
	ld a, LCDCF_ON | LCDCF_BGON
	ld [rLCDC], a
	; During the first (blank) frame, initialize display registers
	; ld a, %11100100
	ld a, %00000010
	ld [rBGP], a
    ; Clear any pending interrupts
    xor a
    ld [rIF], a
    ; Enable VBlank interrupts
    ld a, IEF_VBLANK
    ld [rIE], a
    ei

.haltLoop
    halt
    nop
    jp .haltLoop

; Reads controller data into register B
ReadController:
    ld a, P1F_GET_DPAD
    ld [rP1], a
    ld a, [rP1]
    ld a, [rP1]
    cpl
    and $0f
    swap a
    ld b, a

    ld a, P1F_GET_BTN
    ld [rP1], a
    ld a, [rP1]
    ld a, [rP1]
    ld a, [rP1]
    ld a, [rP1]
    ld a, [rP1]
    ld a, [rP1]
    cpl
    and $0f
    or b
    ld b, a

    ld a, P1F_GET_NONE
    ld [rP1], a
    
    ret

VBlankInterrupt:
    push af
    push bc
    push de
    push hl

    call ReadController

    bit 0, b
    jp z, .aNotPressed
    ld a, PRESSED_TILE_NUM
    ld [A_PRESSED_TILE], a
    jp .testB
.aNotPressed
    ld a, NOT_PRESSED_TILE_NUM
    ld [A_PRESSED_TILE], a

.testB
    bit 1, b
    jp z, .bNotPressed
    ld a, PRESSED_TILE_NUM
    ld [B_PRESSED_TILE], a
    jp .testSe
.bNotPressed
    ld a, NOT_PRESSED_TILE_NUM
    ld [B_PRESSED_TILE], a

.testSe
    bit 2, b
    jp z, .seNotPressed
    ld a, PRESSED_TILE_NUM
    ld [SE_PRESSED_TILE], a
    jp .testSt
.seNotPressed
    ld a, NOT_PRESSED_TILE_NUM
    ld [SE_PRESSED_TILE], a

.testSt
    bit 3, b
    jp z, .stNotPressed
    ld a, PRESSED_TILE_NUM
    ld [ST_PRESSED_TILE], a
    jp .testRight
.stNotPressed
    ld a, NOT_PRESSED_TILE_NUM
    ld [ST_PRESSED_TILE], a

.testRight
    bit 4, b
    jp z, .rightNotPressed
    ld a, PRESSED_TILE_NUM
    ld [RIGHT_PRESSED_TILE], a
    jp .testLeft
.rightNotPressed
    ld a, NOT_PRESSED_TILE_NUM
    ld [RIGHT_PRESSED_TILE], a

.testLeft
    bit 5, b
    jp z, .leftNotPressed
    ld a, PRESSED_TILE_NUM
    ld [LEFT_PRESSED_TILE], a
    jp .testUp
.leftNotPressed
    ld a, NOT_PRESSED_TILE_NUM
    ld [LEFT_PRESSED_TILE], a

.testUp
    bit 6, b
    jp z, .upNotPressed
    ld a, PRESSED_TILE_NUM
    ld [UP_PRESSED_TILE], a
    jp .testDown
.upNotPressed
    ld a, NOT_PRESSED_TILE_NUM
    ld [UP_PRESSED_TILE], a

.testDown
    bit 7, b
    jp z, .downNotPressed
    ld a, PRESSED_TILE_NUM
    ld [DOWN_PRESSED_TILE], a
    jp .end
.downNotPressed
    ld a, NOT_PRESSED_TILE_NUM
    ld [DOWN_PRESSED_TILE], a

.end
    pop hl
    pop de
    pop bc
    pop af
    reti


SECTION "Tile data", ROM0

Tiles:
    ; Blank tile
    db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, 
    ; Small black square
    db $00, $00, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $7e, $00, $00,
    ; Letter 'A'
    db $38, $38, $44, $44, $82, $82, $82, $82, $fe, $fe, $82, $82, $82, $82, $82, $82, 
    ; Letter 'B'
    db $fc, $fc, $82, $82, $82, $82, $fc, $fc, $82, $82, $82, $82, $82, $82, $fe, $fe,  
    ; Select symbol
    db $38, $38, $20, $20, $20, $20, $2e, $2e, $e8, $e8, $0e, $0e, $08, $08, $0e, $0e,
    ; Start symbol
    db $38, $38, $20, $20, $20, $20, $2e, $2e, $e4, $e4, $04, $04, $04, $04, $04, $04,
    ; Right arrow
    db $10, $10, $08, $08, $04, $04, $fe, $fe, $04, $04, $08, $08, $10, $10, $00, $00,
    ; Left arrow
    db $10, $10, $20, $20, $40, $40, $fe, $fe, $40, $40, $20, $20, $10, $10, $00, $00,
    ; Up arrow
    db $10, $10, $38, $38, $54, $54, $92, $92, $10, $10, $10, $10, $10, $10, $00, $00,
    ; Down arrow
    db $00, $00, $10, $10, $10, $10, $10, $10, $92, $92, $54, $54, $38, $38, $10, $10,
TilesEnd:


SECTION "Tilemap", ROM0

Tilemap:
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $02, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $03, $00, $00, $00, $07, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $04, $00, $00, $00, $08, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $05, $00, $00, $00, $09, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
	db $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00,  0,0,0,0,0,0,0,0,0,0,0,0
TilemapEnd:
